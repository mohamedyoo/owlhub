-- Gui to Lua
-- Version: 3.2

-- Instances:

local emptyness = {}

local tween = game:GetService("TweenService")
local tweeninfo = TweenInfo.new
local input = game:GetService("UserInputService")
local run = game:GetService("RunService")

local Utility = {}
local Objects = {}
function emptyness:DraggingEnabled(frame, parent)

	parent = parent or frame

	-- stolen from wally or kiriot, kek
	local dragging = false
	local dragInput, mousePos, framePos

	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			mousePos = input.Position
			framePos = parent.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			dragInput = input
		end
	end)

	input.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - mousePos
			parent.Position  = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
		end
	end)
end

function Utility:TweenObject(obj, properties, duration, ...)
	tween:Create(obj, tweeninfo(duration, ...), properties):Play()
end


local themes = {
	SchemeColor = Color3.fromRGB(74, 99, 135),
	Background = Color3.fromRGB(36, 37, 43),
	Header = Color3.fromRGB(28, 29, 34),
	TextColor = Color3.fromRGB(255,255,255),
	ElementColor = Color3.fromRGB(32, 32, 38)
}
local themeStyles = {
	DarkTheme = {
		SchemeColor = Color3.fromRGB(64, 64, 64),
		Background = Color3.fromRGB(0, 0, 0),
		Header = Color3.fromRGB(0, 0, 0),
		TextColor = Color3.fromRGB(255,255,255),
		ElementColor = Color3.fromRGB(20, 20, 20)
	},
	LightTheme = {
		SchemeColor = Color3.fromRGB(150, 150, 150),
		Background = Color3.fromRGB(255,255,255),
		Header = Color3.fromRGB(200, 200, 200),
		TextColor = Color3.fromRGB(0,0,0),
		ElementColor = Color3.fromRGB(224, 224, 224)
	},
	BloodTheme = {
		SchemeColor = Color3.fromRGB(227, 27, 27),
		Background = Color3.fromRGB(10, 10, 10),
		Header = Color3.fromRGB(5, 5, 5),
		TextColor = Color3.fromRGB(255,255,255),
		ElementColor = Color3.fromRGB(20, 20, 20)
	},
	GrapeTheme = {
		SchemeColor = Color3.fromRGB(166, 71, 214),
		Background = Color3.fromRGB(64, 50, 71),
		Header = Color3.fromRGB(36, 28, 41),
		TextColor = Color3.fromRGB(255,255,255),
		ElementColor = Color3.fromRGB(74, 58, 84)
	},
	Ocean = {
		SchemeColor = Color3.fromRGB(86, 76, 251),
		Background = Color3.fromRGB(26, 32, 58),
		Header = Color3.fromRGB(38, 45, 71),
		TextColor = Color3.fromRGB(200, 200, 200),
		ElementColor = Color3.fromRGB(38, 45, 71)
	},
	Midnight = {
		SchemeColor = Color3.fromRGB(26, 189, 158),
		Background = Color3.fromRGB(44, 62, 82),
		Header = Color3.fromRGB(57, 81, 105),
		TextColor = Color3.fromRGB(255, 255, 255),
		ElementColor = Color3.fromRGB(52, 74, 95)
	},
	Sentinel = {
		SchemeColor = Color3.fromRGB(230, 35, 69),
		Background = Color3.fromRGB(32, 32, 32),
		Header = Color3.fromRGB(24, 24, 24),
		TextColor = Color3.fromRGB(119, 209, 138),
		ElementColor = Color3.fromRGB(24, 24, 24)
	},
	Synapse = {
		SchemeColor = Color3.fromRGB(46, 48, 43),
		Background = Color3.fromRGB(13, 15, 12),
		Header = Color3.fromRGB(36, 38, 35),
		TextColor = Color3.fromRGB(152, 99, 53),
		ElementColor = Color3.fromRGB(24, 24, 24)
	},
	Serpent = {
		SchemeColor = Color3.fromRGB(0, 166, 58),
		Background = Color3.fromRGB(31, 41, 43),
		Header = Color3.fromRGB(22, 29, 31),
		TextColor = Color3.fromRGB(255,255,255),
		ElementColor = Color3.fromRGB(22, 29, 31)
	}
}
local oldTheme = ""

local SettingsT = {

}

local Name = "KavoConfig.JSON"

pcall(function()

	if not pcall(function() readfile(Name) end) then
		writefile(Name, game:service'HttpService':JSONEncode(SettingsT))
	end

	Settings = game:service'HttpService':JSONEncode(readfile(Name))
end)

local LibName = tostring(math.random(1, 100))..tostring(math.random(1,50))..tostring(math.random(1, 100))

function emptyness:ToggleUI()
	if game.CoreGui[LibName].Enabled then
		game.CoreGui[LibName].Enabled = false
	else
		game.CoreGui[LibName].Enabled = true
	end
end

function emptyness.CreateLib(kavName, themeList)
	if not themeList then
		themeList = themes
	end
	if themeList == "DarkTheme" then
		themeList = themeStyles.DarkTheme
	elseif themeList == "LightTheme" then
		themeList = themeStyles.LightTheme
	elseif themeList == "BloodTheme" then
		themeList = themeStyles.BloodTheme
	elseif themeList == "GrapeTheme" then
		themeList = themeStyles.GrapeTheme
	elseif themeList == "Ocean" then
		themeList = themeStyles.Ocean
	elseif themeList == "Midnight" then
		themeList = themeStyles.Midnight
	elseif themeList == "Sentinel" then
		themeList = themeStyles.Sentinel
	elseif themeList == "Synapse" then
		themeList = themeStyles.Synapse
	elseif themeList == "Serpent" then
		themeList = themeStyles.Serpent
	else
		if themeList.SchemeColor == nil then
			themeList.SchemeColor = Color3.fromRGB(74, 99, 135)
		elseif themeList.Background == nil then
			themeList.Background = Color3.fromRGB(36, 37, 43)
		elseif themeList.Header == nil then
			themeList.Header = Color3.fromRGB(28, 29, 34)
		elseif themeList.TextColor == nil then
			themeList.TextColor = Color3.fromRGB(255,255,255)
		elseif themeList.ElementColor == nil then
			themeList.ElementColor = Color3.fromRGB(32, 32, 38)
		end
	end

	themeList = themeList or {}
	local selectedTab 
	kavName = kavName or "Library"
	table.insert(emptyness, kavName)
	for i,v in pairs(game.CoreGui:GetChildren()) do
		if v:IsA("ScreenGui") and v.Name == kavName then
			v:Destroy()
		end
	end

local ScreenGui = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local X = Instance.new("TextButton")
local MainHeader = Instance.new("Frame")
local coverup = Instance.new("Frame")
local headerCover = Instance.new("UICorner")
local MainSide = Instance.new("Frame")
local sideCorner = Instance.new("UICorner")
local coverup_2 = Instance.new("Frame")
local tabFrames = Instance.new("Frame")
local tabListing = Instance.new("UIListLayout")
local infoContainer = Instance.new("Frame")
local pages = Instance.new("Frame")
local Pages = Instance.new("Folder")
local MainCorner = Instance.new("UICorner")

--Properties:

	local blurFrame = Instance.new("Frame")

	emptyness:DraggingEnabled(MainHeader, Main)

	blurFrame.Name = "blurFrame"
	blurFrame.Parent = pages
	blurFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	blurFrame.BackgroundTransparency = 1
	blurFrame.BorderSizePixel = 0
	blurFrame.Position = UDim2.new(-0.0222222228, 0, -0.0371747203, 0)
	blurFrame.Size = UDim2.new(0, 376, 0, 289)
	blurFrame.ZIndex = 999

	ScreenGui.Parent = game.CoreGui
	ScreenGui.Name = LibName
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	ScreenGui.ResetOnSpawn = false

	Main.Name = "main"
	Main.Parent = ScreenGui
	Main.BackgroundColor3 = themeList.Background
	Main.Position = UDim2.new(0.147096783, 0, 0.22800304, 0)
	Main.Size = UDim2.new(0, 547, 0, 341)
	
	MainCorner.CornerRadius = UDim.new(0, 4)
	MainCorner.Name = "MainCorner"
	MainCorner.Parent = Main
	
Title.Name = "Title"
	Title.Parent = Main
Title.Active = true
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.Size = UDim2.new(0, 489, 0, 8)
Title.Font = Enum.Font.SourceSans
Title.TextColor3 = Color3.fromRGB(85, 255, 255)
Title.TextScaled = true
Title.TextSize = 16.000
Title.TextWrapped = true

X.Name = "X"
	X.Parent = Main
X.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
X.BackgroundTransparency = 1.000
X.Position = UDim2.new(0.895458221, 0, 0, 0)
X.Size = UDim2.new(0, 65, 0, 33)
X.Font = Enum.Font.SourceSans
X.Text = "X"
X.TextColor3 = Color3.fromRGB(85, 255, 255)
X.TextScaled = true
X.TextSize = 14.000
X.TextWrapped = true
	X.MouseButton1Click:Connect(function()
		game.TweenService:Create(X, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
			ImageTransparency = 1
		}):Play()
		wait()
		game.TweenService:Create(Main, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
			Size = UDim2.new(0,0,0,0),
			Position = UDim2.new(0, Main.AbsolutePosition.X + (Main.AbsoluteSize.X / 2), 0, Main.AbsolutePosition.Y + (Main.AbsoluteSize.Y / 2))
		}):Play()
		wait(1)
		ScreenGui:Destroy()
	end)
	
MainHeader.Name = "MainHeader"
	MainHeader.Parent = Main
	MainHeader.BackgroundColor3 = themeList.Header
	Objects[MainHeader] = "BackgroundColor3"
MainHeader.Position = UDim2.new(0.0310786106, 0, 0, 0)
MainHeader.Size = UDim2.new(0, 472, 0, 29)

coverup.Name = "coverup"
coverup.Parent = MainHeader
	coverup.BackgroundColor3 = themeList.Header
coverup.BorderSizePixel = 0
coverup.Position = UDim2.new(-0.0401146114, 0, 0, 0)
coverup.Size = UDim2.new(0, 363, 0, 7)

headerCover.CornerRadius = UDim.new(0, 4)
headerCover.Name = "headerCover"
headerCover.Parent = MainHeader

MainSide.Name = "MainSide"
	MainSide.Parent = Main
	MainSide.BackgroundColor3 = themeList.Header
MainSide.Position = UDim2.new(0, 0, 0.115044288, 0)
MainSide.Size = UDim2.new(0, 170, 0, 301)

sideCorner.CornerRadius = UDim.new(0, 4)
sideCorner.Name = "sideCorner"
sideCorner.Parent = MainSide

coverup_2.Name = "coverup_2"
coverup_2.Parent = MainSide
	coverup_2.BackgroundColor3 = themeList.Header
coverup_2.Size = UDim2.new(0, 7, 0, 289)

tabFrames.Name = "tabFrames"
tabFrames.Parent = MainSide
tabFrames.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
tabFrames.Position = UDim2.new(0.0065555349, 0, -0.0259045959, 0)
tabFrames.Size = UDim2.new(0, 168, 0, 309)

tabListing.Name = "tabListing"
tabListing.Parent = tabFrames
tabListing.SortOrder = Enum.SortOrder.LayoutOrder
	
	pages.Name = "pages"
	pages.Parent = Main
	pages.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	pages.BorderSizePixel = 0
	pages.Position = UDim2.new(0.325891584, 0, 0.0892461985, 0)
	pages.Size = UDim2.new(0, 368, 0, 308)

	Pages.Name = "Pages"
	Pages.Parent = pages
	
infoContainer.Name = "infoContainer"
	infoContainer.Parent = Main
infoContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	infoContainer.BorderColor3 = Color3.fromRGB(27, 42, 53)
	infoContainer.ClipsDescendants = true
infoContainer.Size = UDim2.new(0, 489, 0, 33)
	
	coroutine.wrap(function()
		while wait() do
			Main.BackgroundColor3 = themeList.Background
			MainHeader.BackgroundColor3 = themeList.Header
			MainSide.BackgroundColor3 = themeList.Header
			coverup_2.BackgroundColor3 = themeList.Header
			coverup.BackgroundColor3 = themeList.Header
		end
	end)()

	function emptyness:ChangeColor(prope,color)
		if prope == "Background" then
			themeList.Background = color
		elseif prope == "SchemeColor" then
			themeList.SchemeColor = color
		elseif prope == "Header" then
			themeList.Header = color
		elseif prope == "TextColor" then
			themeList.TextColor = color
		elseif prope == "ElementColor" then
			themeList.ElementColor = color
		end
	end
	local Tabs = {}

	local first = true

	function Tabs:Tab(tabName)
		tabName = tabName or "Tab"
		local tabButton = Instance.new("TextButton")
		local UICorner = Instance.new("UICorner")
		local page = Instance.new("ScrollingFrame")
		local pageListing = Instance.new("UIListLayout")

		local function UpdateSize()
			local cS = pageListing.AbsoluteContentSize

			game.TweenService:Create(page, TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
				CanvasSize = UDim2.new(0,cS.X,0,cS.Y)
			}):Play()
		end

		page.Name = "Page"
		page.Parent = Pages
		page.Active = true
		page.BackgroundColor3 = themeList.Background
		page.BorderSizePixel = 0
		page.Position = UDim2.new(0, 0, -0.00371747208, 0)
		page.Size = UDim2.new(1, 0, 1, 0)
		page.ScrollBarThickness = 5
		page.Visible = false
		page.ScrollBarImageColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 16, themeList.SchemeColor.g * 255 - 15, themeList.SchemeColor.b * 255 - 28)

		pageListing.Name = "pageListing"
		pageListing.Parent = page
		pageListing.SortOrder = Enum.SortOrder.LayoutOrder
		pageListing.Padding = UDim.new(0, 5)

		tabButton.Name = tabName.."TabButton"
		tabButton.Parent = tabFrames
		tabButton.BackgroundColor3 = themeList.SchemeColor
		Objects[tabButton] = "SchemeColor"
		tabButton.Size = UDim2.new(0, 135, 0, 28)
		tabButton.AutoButtonColor = false
		tabButton.Font = Enum.Font.Gotham
		tabButton.Text = tabName
		tabButton.TextColor3 = themeList.TextColor
		Objects[tabButton] = "TextColor3"
		tabButton.TextSize = 14.000
		tabButton.BackgroundTransparency = 1

		if first then
			first = false
			page.Visible = true
			tabButton.BackgroundTransparency = 0
			UpdateSize()
		else
			page.Visible = false
			tabButton.BackgroundTransparency = 1
		end

		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = tabButton
		table.insert(Tabs, tabName)

		UpdateSize()
		page.ChildAdded:Connect(UpdateSize)
		page.ChildRemoved:Connect(UpdateSize)

		tabButton.MouseButton1Click:Connect(function()
			UpdateSize()
			for i,v in next, Pages:GetChildren() do
				v.Visible = false
			end
			page.Visible = true
			for i,v in next, tabFrames:GetChildren() do
				if v:IsA("TextButton") then
					if themeList.SchemeColor == Color3.fromRGB(255,255,255) then
						Utility:TweenObject(v, {TextColor3 = Color3.fromRGB(255,255,255)}, 0.2)
					end 
					if themeList.SchemeColor == Color3.fromRGB(0,0,0) then
						Utility:TweenObject(v, {TextColor3 = Color3.fromRGB(0,0,0)}, 0.2)
					end 
					Utility:TweenObject(v, {BackgroundTransparency = 1}, 0.2)
				end
			end
			if themeList.SchemeColor == Color3.fromRGB(255,255,255) then
				Utility:TweenObject(tabButton, {TextColor3 = Color3.fromRGB(0,0,0)}, 0.2)
			end 
			if themeList.SchemeColor == Color3.fromRGB(0,0,0) then
				Utility:TweenObject(tabButton, {TextColor3 = Color3.fromRGB(255,255,255)}, 0.2)
			end 
			Utility:TweenObject(tabButton, {BackgroundTransparency = 0}, 0.2)
		end)
		local Sections = {}
		local focusing = false
		local viewDe = false

		coroutine.wrap(function()
			while wait() do
				page.BackgroundColor3 = themeList.Background
				page.ScrollBarImageColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 16, themeList.SchemeColor.g * 255 - 15, themeList.SchemeColor.b * 255 - 28)
				tabButton.TextColor3 = themeList.TextColor
				tabButton.BackgroundColor3 = themeList.SchemeColor
			end
		end)()
		
		function Sections:Section(secName, hidden)
			secName = secName or "Section"
			local sectionFunctions = {}
			local modules = {}
			hidden = hidden or false
			local sectionFrame = Instance.new("Frame")
			local sectionlistoknvm = Instance.new("UIListLayout")
			local sectionHead = Instance.new("Frame")
			local sHeadCorner = Instance.new("UICorner")
			local sectionName = Instance.new("TextLabel")
			local sectionInners = Instance.new("Frame")
			local sectionElListing = Instance.new("UIListLayout")

			if hidden then
				sectionHead.Visible = false
			else
				sectionHead.Visible = true
			end

			sectionFrame.Name = "sectionFrame"
			sectionFrame.Parent = page
			sectionFrame.BackgroundColor3 = themeList.Background--36, 37, 43
			sectionFrame.BorderSizePixel = 0

			sectionlistoknvm.Name = "sectionlistoknvm"
			sectionlistoknvm.Parent = sectionFrame
			sectionlistoknvm.SortOrder = Enum.SortOrder.LayoutOrder
			sectionlistoknvm.Padding = UDim.new(0, 5)

			for i,v in pairs(sectionInners:GetChildren()) do
				while wait() do
					if v:IsA("Frame") or v:IsA("TextButton") then
						function size(pro)
							if pro == "Size" then
								UpdateSize()
								updateSectionFrame()
							end
						end
						v.Changed:Connect(size)
					end
				end
			end
			sectionHead.Name = "sectionHead"
			sectionHead.Parent = sectionFrame
			sectionHead.BackgroundColor3 = themeList.SchemeColor
			Objects[sectionHead] = "BackgroundColor3"
			sectionHead.Size = UDim2.new(0, 352, 0, 33)

			sHeadCorner.CornerRadius = UDim.new(0, 4)
			sHeadCorner.Name = "sHeadCorner"
			sHeadCorner.Parent = sectionHead

			sectionName.Name = "sectionName"
			sectionName.Parent = sectionHead
			sectionName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			sectionName.BackgroundTransparency = 1.000
			sectionName.BorderColor3 = Color3.fromRGB(27, 42, 53)
			sectionName.Position = UDim2.new(0.0198863633, 0, 0, 0)
			sectionName.Size = UDim2.new(0.980113626, 0, 1, 0)
			sectionName.Font = Enum.Font.Gotham
			sectionName.Text = secName
			sectionName.RichText = true
			sectionName.TextColor3 = themeList.TextColor
			Objects[sectionName] = "TextColor3"
			sectionName.TextSize = 14.000
			sectionName.TextXAlignment = Enum.TextXAlignment.Left
			if themeList.SchemeColor == Color3.fromRGB(255,255,255) then
				Utility:TweenObject(sectionName, {TextColor3 = Color3.fromRGB(0,0,0)}, 0.2)
			end 
			if themeList.SchemeColor == Color3.fromRGB(0,0,0) then
				Utility:TweenObject(sectionName, {TextColor3 = Color3.fromRGB(255,255,255)}, 0.2)
			end 

			sectionInners.Name = "sectionInners"
			sectionInners.Parent = sectionFrame
			sectionInners.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			sectionInners.BackgroundTransparency = 1.000
			sectionInners.Position = UDim2.new(0, 0, 0.190751448, 0)

			sectionElListing.Name = "sectionElListing"
			sectionElListing.Parent = sectionInners
			sectionElListing.SortOrder = Enum.SortOrder.LayoutOrder
			sectionElListing.Padding = UDim.new(0, 3)


			coroutine.wrap(function()
				while wait() do
					sectionFrame.BackgroundColor3 = themeList.Background
					sectionHead.BackgroundColor3 = themeList.SchemeColor
					tabButton.TextColor3 = themeList.TextColor
					tabButton.BackgroundColor3 = themeList.SchemeColor
					sectionName.TextColor3 = themeList.TextColor
				end
			end)()

			local function updateSectionFrame()
				local innerSc = sectionElListing.AbsoluteContentSize
				sectionInners.Size = UDim2.new(1, 0, 0, innerSc.Y)
				local frameSc = sectionlistoknvm.AbsoluteContentSize
				sectionFrame.Size = UDim2.new(0, 352, 0, frameSc.Y)
			end
			updateSectionFrame()
			UpdateSize()
		
			local Elements = {}
			function Elements:NewButton(bname, callback)
				showLogo = showLogo or true
				local ButtonFunction = {}
				bname = bname or "Click Me!"
				callback = callback or function() end

				local buttonElement = Instance.new("TextButton")
				local UICorner = Instance.new("UICorner")
				local touch = Instance.new("ImageLabel")
				local Sample = Instance.new("ImageLabel")

				table.insert(modules, bname)

				buttonElement.Name = bname
				buttonElement.Parent = sectionInners
				buttonElement.BackgroundColor3 = themeList.ElementColor
				buttonElement.ClipsDescendants = true
				buttonElement.Size = UDim2.new(0, 352, 0, 33)
				buttonElement.AutoButtonColor = false
				buttonElement.Font = Enum.Font.SourceSans
				buttonElement.Text = ""
				buttonElement.TextColor3 = Color3.fromRGB(0, 0, 0)
				buttonElement.TextSize = 14.000
				Objects[buttonElement] = "BackgroundColor3"

				UICorner.CornerRadius = UDim.new(0, 4)
				UICorner.Parent = buttonElement
				
				Sample.Name = "Sample"
				Sample.Parent = buttonElement
				Sample.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Sample.BackgroundTransparency = 1.000
				Sample.Image = "http://www.roblox.com/asset/?id=4560909609"
				Sample.ImageColor3 = themeList.SchemeColor
				Objects[Sample] = "ImageColor3"
				Sample.ImageTransparency = 0.600
				
				touch.Name = "touch"
				touch.Parent = buttonElement
				touch.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				touch.BackgroundTransparency = 1.000
				touch.BorderColor3 = Color3.fromRGB(27, 42, 53)
				touch.Position = UDim2.new(0.0199999996, 0, 0.180000007, 0)
				touch.Size = UDim2.new(0, 21, 0, 21)
				touch.Image = "rbxassetid://3926305904"
				touch.ImageColor3 = themeList.SchemeColor
				Objects[touch] = "SchemeColor"
				touch.ImageRectOffset = Vector2.new(84, 204)
				touch.ImageRectSize = Vector2.new(36, 36)
				touch.ImageTransparency = 0
			end
		end
		
		updateSectionFrame()
		UpdateSize()
		
		local ms = game.Players.LocalPlayer:GetMouse()

		local btn = buttonElement
		local sample = Sample

		btn.MouseButton1Click:Connect(function()
			if not focusing then
				callback()
				local c = sample:Clone()
				c.Parent = btn
				local x, y = (ms.X - c.AbsolutePosition.X), (ms.Y - c.AbsolutePosition.Y)
				c.Position = UDim2.new(0, x, 0, y)
				local len, size = 0.35, nil
				if btn.AbsoluteSize.X >= btn.AbsoluteSize.Y then
					size = (btn.AbsoluteSize.X * 1.5)
				else
					size = (btn.AbsoluteSize.Y * 1.5)
				end
				c:TweenSizeAndPosition(UDim2.new(0, size, 0, size), UDim2.new(0.5, (-size / 2), 0.5, (-size / 2)), 'Out', 'Quad', len, true, nil)
				for i = 1, 10 do
					c.ImageTransparency = c.ImageTransparency + 0.05
					wait(len / 12)
				end
				c:Destroy()
			else
				for i,v in next, infoContainer:GetChildren() do
					Utility:TweenObject(v, {Position = UDim2.new(0,0,2,0)}, 0.2)
					focusing = false
				end
				Utility:TweenObject(blurFrame, {BackgroundTransparency = 1}, 0.2)
			end
		end)
		local hovering = false
		btn.MouseEnter:Connect(function()
			if not focusing then
				game.TweenService:Create(btn, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
					BackgroundColor3 = Color3.fromRGB(themeList.ElementColor.r * 255 + 8, themeList.ElementColor.g * 255 + 9, themeList.ElementColor.b * 255 + 10)
				}):Play()
				hovering = true
			end
		end)
		btn.MouseLeave:Connect(function()
			if not focusing then 
				game.TweenService:Create(btn, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
					BackgroundColor3 = themeList.ElementColor
				}):Play()
				hovering = false
			end
		end)
		
		coroutine.wrap(function()
			while wait() do
				if not hovering then
					buttonElement.BackgroundColor3 = themeList.ElementColor
				end
				Sample.ImageColor3 = themeList.SchemeColor
				touch.ImageColor3 = themeList.SchemeColor
			end
		end)()

		function ButtonFunction:UpdateButton(newTitle)
		end
		return ButtonFunction
	end
	
	
