-- Gui to Lua
-- Version: 3.2

-- Instances:
local Library = {}
-- Random UI Name
local LibraryName = tostring(math.random(100000,200000))..tostring(math.random(100000,200000))..tostring(math.random(100000,200000))

function Library:Toggle()
	if game.CoreGui:FindFirstChild(LibraryName).Enabled then 
		game.CoreGui:FindFirstChild(LibraryName).Enabled = false
	else 
		game.CoreGui:FindFirstChild(LibraryName).Enabled = true
	end
end

function Library:Drag(obj)
	local UserInputService = game:GetService("UserInputService")

	local gui = obj

	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end

function Library:Create(xHubName,xGameName)
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local SideFrame = Instance.new("Frame")
local gameHub = Instance.new("TextLabel")
local HubName = Instance.new("TextLabel")
local Line = Instance.new("Frame")
local tabFrames = Instance.new("Frame")
local tabListing = Instance.new("UIListLayout")
local PlaceId = Instance.new("TextButton")
	local TabHolder = Instance.new("Frame")
local Tab = Instance.new("Folder")
local X = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local UIGradient = Instance.new("UIGradient")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(0, 29, 29)
MainFrame.Position = UDim2.new(0.112565249, 0, 0.0602816977, 0)
MainFrame.Size = UDim2.new(0.725324035, 0, 0.913173676, 0)

UICorner.CornerRadius = UDim.new(0, 11)
UICorner.Parent = MainFrame

SideFrame.Name = "SideFrame"
SideFrame.Parent = MainFrame
SideFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SideFrame.BackgroundTransparency = 1.000
SideFrame.Size = UDim2.new(0.40206185, 0, 0.928961754, 0)

gameHub.Name = "gameHub"
gameHub.Parent = SideFrame
gameHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
gameHub.BackgroundTransparency = 1.000
gameHub.Position = UDim2.new(0, 0, 0.00295857992, 0)
gameHub.Size = UDim2.new(0, 232, 0, 33)
	gameHub.Font = Enum.Font.SourceSans
	gameHub.Text = xGameName
gameHub.TextColor3 = Color3.fromRGB(255, 255, 255)
gameHub.TextScaled = true
gameHub.TextSize = 14.000
gameHub.TextWrapped = true

HubName.Name = "HubName"
HubName.Parent = SideFrame
HubName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HubName.BackgroundTransparency = 1.000
HubName.Position = UDim2.new(0, 0, 0.109467454, 0)
HubName.Size = UDim2.new(0, 232, 0, 29)
	HubName.Font = Enum.Font.SourceSans
	HubName.Text = xHubName
HubName.TextColor3 = Color3.fromRGB(255, 255, 255)
HubName.TextScaled = true
HubName.TextSize = 14.000
HubName.TextWrapped = true

Line.Name = "Line"
Line.Parent = SideFrame
Line.BackgroundColor3 = Color3.fromRGB(85, 170, 255)
Line.Position = UDim2.new(0, 0, 0.100591719, 0)
Line.Size = UDim2.new(0, 233, 0, 3)

tabFrames.Name = "tabFrames"
tabFrames.Parent = SideFrame
tabFrames.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
tabFrames.BackgroundTransparency = 1.000
tabFrames.Position = UDim2.new(0, 0, 0.195266277, 0)
tabFrames.Size = UDim2.new(0, 233, 0, 272)

tabListing.Name = "tabListing"
tabListing.Parent = tabFrames
tabListing.SortOrder = Enum.SortOrder.LayoutOrder

PlaceId.Name = "PlaceId"
PlaceId.Parent = MainFrame
PlaceId.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PlaceId.BackgroundTransparency = 1.000
PlaceId.Position = UDim2.new(1.31089255e-08, 0, 0.928961754, 0)
PlaceId.Size = UDim2.new(0.400343657, 0, 0.0683060139, 0)
PlaceId.Font = Enum.Font.SourceSans
PlaceId.Text = "Copy place ID"
PlaceId.TextColor3 = Color3.fromRGB(255, 255, 255)
PlaceId.TextScaled = true
PlaceId.TextSize = 14.000
PlaceId.TextWrapped = true
	PlaceId.MouseButton1Click:Connect(function()
		game:GetService("StarterGui"):SetCore("SendNotification",{
			Title = "Copied",
			Text = "you have copied the placeID",
			Duration = 4
		})
		wait(0.5)
		setclipboard("ID: "..game.PlaceId)
	end)
	
	
	TabHolder.Name = "TabHolder"
	TabHolder.Parent = MainFrame
	TabHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabHolder.BackgroundTransparency = 1.000
	TabHolder.Position = UDim2.new(0.400343657, 0, 0.0928961784, 0)
	TabHolder.Size = UDim2.new(0.596219957, 0, 0.901639342, 0)

Tab.Name = "Tabs"
Tab.Parent = TabHolder

X.Name = "X"
X.Parent = MainFrame
X.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
X.Position = UDim2.new(0.926116824, 0, 0, 0)
X.Size = UDim2.new(0.0738831609, 0, 0.0819672123, 0)
X.Font = Enum.Font.SourceSans
X.Text = "X"
X.TextColor3 = Color3.fromRGB(0, 0, 0)
X.TextScaled = true
X.TextSize = 14.000
X.TextWrapped = true
	X.MouseButton1Click:Connect(function()
		ScreenGui:Destroy()
	end)
	
UICorner_2.Parent = X

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(141, 88, 255)), ColorSequenceKeypoint.new(0.10, Color3.fromRGB(112, 143, 255)), ColorSequenceKeypoint.new(0.19, Color3.fromRGB(215, 67, 241)), ColorSequenceKeypoint.new(0.20, Color3.fromRGB(255, 16, 48)), ColorSequenceKeypoint.new(0.29, Color3.fromRGB(111, 18, 31)), ColorSequenceKeypoint.new(0.39, Color3.fromRGB(90, 60, 209)), ColorSequenceKeypoint.new(0.53, Color3.fromRGB(219, 79, 52)), ColorSequenceKeypoint.new(0.60, Color3.fromRGB(225, 79, 206)), ColorSequenceKeypoint.new(0.68, Color3.fromRGB(231, 88, 31)), ColorSequenceKeypoint.new(0.79, Color3.fromRGB(238, 141, 103)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient.Parent = X
	
	Library:Drag(MainFrame, SideFrame)
-- tab

local Tabs = {}

function Tabs:NewTab(tabName)
	local tabButton = Instance.new("TextButton")
	tabButton.Name = "TabButton"
	tabButton.Parent = tabFrames
	tabButton.BackgroundColor3 = Color3.fromRGB(85, 170, 255)
	tabButton.BorderSizePixel = 0
	tabButton.Size = UDim2.new(0, 233, 0, 30)
	tabButton.Font = Enum.Font.SourceSans
	tabButton.Text = tabName
	tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	tabButton.TextSize = 16

	local tabPage = Instance.new("Frame")
	tabPage.Name = tabName
	tabPage.Parent = Tab
	tabPage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	tabPage.BackgroundTransparency = 1
	tabPage.Size = UDim2.new(1, 0, 1, 0)

	tabButton.MouseButton1Click:Connect(function()
		-- Show the selected tab page and hide others
		for _, page in pairs(Tabs:GetChildren()) do
			if page:IsA("Frame") then
				page.Visible = (page.Name == tabName)
			end
		end
	end)
end

-- Example usage
--Tabs:NewTab("Tab 1")
--Tabs:NewTab("Tab 2")
--Tabs:NewTab("Tab 3")

-- label

local Elements = {}

-- Function to create a label
	function Elements:Label(Name)
		local Name = Name or "Label"
		local LabelFunction = {}
		local LabelFrame = Instance.new("Frame")
		local LabelFrameCorner = Instance.new("UICorner")
		local Label = Instance.new("TextLabel")

		LabelFrame.Name = tostring(Name).."_Label"
		LabelFrame.Parent = Tabs
		LabelFrame.BackgroundColor3 = Color3.fromRGB(55, 74, 251)
		LabelFrame.Position = UDim2.new(0.0456621014, 0, 0, 0)
		LabelFrame.Size = UDim2.new(0, 408, 0, 35)

		LabelFrameCorner.Name = "LabelFrameCorner"
		LabelFrameCorner.Parent = LabelFrame

		Label.Name = "Label"
		Label.Parent = LabelFrame
		Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Label.BackgroundTransparency = 1.000
		Label.BorderSizePixel = 0
		Label.Size = UDim2.new(0, 408, 0, 35)
		Label.Font = Enum.Font.Gotham
		Label.Text = Name
		Label.TextColor3 = Color3.fromRGB(255, 255, 255)
		Label.TextSize = 16.000

		Label.MouseEnter:Connect(function()
			game:GetService("TweenService"):Create(LabelFrame, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
				BackgroundColor3 = Color3.fromRGB(63, 83, 255)
			}):Play()
		end)
		Label.MouseLeave:Connect(function()
			game:GetService("TweenService"):Create(LabelFrame, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
				BackgroundColor3 = Color3.fromRGB(55, 74, 251)
			}):Play()
		end)

		function LabelFunction:UpdateLabel(Name)
			Label.Text = Name
			LabelHolder.Name = tostring(Name).."_Label"
		end
		return LabelFunction
	end

-- Example usage
--Elements:Label("ExampleLabel")

-- Function to create a toggle
function Elements:Toggle(Name, Callback)
	local Name = Name or "Toggle"
	local Callback = Callback or function() end
	local ToggleEnabled = false

	local ToggleFrame = Instance.new("Frame")
	ToggleFrame.Name = tostring(Name) .. "_Toggle"
	ToggleFrame.Parent = Tabs
	ToggleFrame.BackgroundColor3 = Color3.fromRGB(40, 42, 60)
	ToggleFrame.BorderSizePixel = 0
	ToggleFrame.Size = UDim2.new(0, 408, 0, 35)

	local ToggleName = Instance.new("TextLabel")
	ToggleName.Name = "ToggleName"
	ToggleName.Parent = ToggleFrame
	ToggleName.BackgroundColor3 = Color3.fromRGB(40, 42, 60)
	ToggleName.BackgroundTransparency = 1.000
	ToggleName.BorderSizePixel = 0
	ToggleName.Size = UDim2.new(0, 347, 0, 35)
	ToggleName.Font = Enum.Font.Gotham
	ToggleName.Text = Name
	ToggleName.TextColor3 = Color3.fromRGB(255, 255, 255)
	ToggleName.TextSize = 16.000
	ToggleName.TextXAlignment = Enum.TextXAlignment.Left

	local ToggleF = Instance.new("Frame")
	ToggleF.Name = "ToggleF"
	ToggleF.Parent = ToggleFrame
	ToggleF.BackgroundColor3 = Color3.fromRGB(55, 55, 75)
	ToggleF.BackgroundTransparency = 0
	ToggleF.BorderSizePixel = 0
	ToggleF.Position = UDim2.new(0.867647052, 0, 0.142857149, 0)
	ToggleF.Size = UDim2.new(0, 45, 0, 23)

	local ToggleCorner = Instance.new("UICorner")
	ToggleCorner.CornerRadius = UDim.new(0, 25)
	ToggleCorner.Name = "ToggleCorner"
	ToggleCorner.Parent = ToggleF

	local ToggleButton = Instance.new("TextButton")
	ToggleButton.Name = "ToggleButton"
	ToggleButton.Parent = ToggleF
	ToggleButton.BackgroundColor3 = Color3.fromRGB(55, 55, 75)
	ToggleButton.BackgroundTransparency = 1
	ToggleButton.BorderSizePixel = 0
	ToggleButton.Size = UDim2.new(0, 45, 0, 23)
	ToggleButton.Font = Enum.Font.SourceSans
	ToggleButton.Text = ""
	ToggleButton.TextColor3 = Color3.fromRGB(0, 0, 0)
	ToggleButton.TextSize = 14.000

	local ToggleCircle = Instance.new("ImageLabel")
	ToggleCircle.Name = "ToggleCircle"
	ToggleCircle.Parent = ToggleF
	ToggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ToggleCircle.BackgroundTransparency = 1.000
	ToggleCircle.Position = UDim2.new(0.093, 0, 0.153, 0)
	ToggleCircle.Size = UDim2.new(0, 17, 0, 17)
	ToggleCircle.Image = "rbxassetid://3570695787"
	ToggleCircle.ScaleType = Enum.ScaleType.Slice
	ToggleCircle.SliceCenter = Rect.new(100, 100, 100, 100)
	ToggleCircle.SliceScale = 0.120

	ToggleButton.MouseButton1Down:Connect(function()
		ToggleEnabled = not ToggleEnabled
		if ToggleEnabled then
			game:GetService("TweenService"):Create(ToggleF, TweenInfo.new(0.3), { BackgroundColor3 = Color3.fromRGB(55, 74, 251) }):Play()
			game:GetService("TweenService"):Create(ToggleCircle, TweenInfo.new(0.3), { Position = UDim2.new(0.559, 0, 0.153, 0) }):Play()
		else
			game:GetService("TweenService"):Create(ToggleF, TweenInfo.new(0.3), { BackgroundColor3 = Color3.fromRGB(55, 55, 75) }):Play()
			game:GetService("TweenService"):Create(ToggleCircle, TweenInfo.new(0.3), { Position = UDim2.new(0.093, 0, 0.153, 0) }):Play()
		end
		pcall(Callback, ToggleEnabled)
	end)
end

-- Example usage
--Elements:Toggle("Toggle Example", function(isOn)
	--print("Toggle state:", isOn)
	-- Add your logic here based on the toggle state
--end)


--slider funtion

function Elements:Slider(Name, Min, Max, Callback)
	local Name = Name or "Slider"
	local Callback = Callback or function() end
	local Max = Max or 500
	local Min = Min or 16
	local SliderFrame = Instance.new("Frame")
	local SliderFrameCorner = Instance.new("UICorner")
	local SliderButton = Instance.new("TextButton")
	local SliderButtonCorner = Instance.new("UICorner")
	local SliderTrail = Instance.new("Frame")
	local SliderTrailCorner = Instance.new("UICorner")
	local SliderName = Instance.new("TextLabel")
	local SliderNamePadding = Instance.new("UIPadding")
	local SliderValue = Instance.new("TextLabel")
	local SliderValuePadding = Instance.new("UIPadding")

	SliderFrame.Name = tostring(Name) .. "_Slider"
	SliderFrame.Parent = Tabs -- Change 'Tabs' to the parent frame you want to use
	SliderFrame.BackgroundColor3 = Color3.fromRGB(40, 42, 60)
	SliderFrame.Size = UDim2.new(0, 408, 0, 50)

	SliderFrameCorner.Name = "SliderFrameCorner"
	SliderFrameCorner.Parent = SliderFrame

	SliderButton.Name = "SliderButton"
	SliderButton.Parent = SliderFrame
	SliderButton.BackgroundColor3 = Color3.fromRGB(55, 55, 75)
	SliderButton.BorderSizePixel = 0
	SliderButton.Position = UDim2.new(0.0242369417, 0, 0.639999986, 0)
	SliderButton.Size = UDim2.new(0, 389, 0, 10)
	SliderButton.Font = Enum.Font.SourceSans
	SliderButton.Text = ""
	SliderButton.TextColor3 = Color3.fromRGB(0, 0, 0)
	SliderButton.TextSize = 14.000

	SliderButtonCorner.Name = "SliderButtonCorner"
	SliderButtonCorner.Parent = SliderButton

	SliderTrail.Name = "SliderTrail"
	SliderTrail.Parent = SliderButton
	SliderTrail.BackgroundColor3 = Color3.fromRGB(55, 74, 251)
	SliderTrail.Size = UDim2.new(0, 0, 0, 10)
	SliderTrail.BorderSizePixel = 0

	SliderTrailCorner.Name = "SliderTrailCorner"
	SliderTrailCorner.Parent = SliderTrail

	SliderName.Name = "SliderName"
	SliderName.Parent = SliderFrame
	SliderName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SliderName.BackgroundTransparency = 1.000
	SliderName.BorderSizePixel = 0
	SliderName.Size = UDim2.new(0, 320, 0, 26)
	SliderName.Font = Enum.Font.Gotham
	SliderName.Text = Name
	SliderName.TextColor3 = Color3.fromRGB(255, 255, 255)
	SliderName.TextSize = 16.000
	SliderName.TextXAlignment = Enum.TextXAlignment.Left

	SliderNamePadding.Name = "SliderNamePadding"
	SliderNamePadding.Parent = SliderName
	SliderNamePadding.PaddingLeft = UDim.new(0, 10)

	SliderValue.Name = "SliderValue"
	SliderValue.Parent = SliderFrame
	SliderValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SliderValue.BackgroundTransparency = 1.000
	SliderValue.BorderSizePixel = 0
	SliderValue.TextTransparency = 1.000
	SliderValue.Position = UDim2.new(0.802061796, 0, 0, 0)
	SliderValue.Size = UDim2.new(0, 80, 0, 26)
	SliderValue.Font = Enum.Font.Gotham
	SliderValue.Text = "Value"
	SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
	SliderValue.TextSize = 16.000
	SliderValue.TextXAlignment = Enum.TextXAlignment.Right

	SliderValuePadding.Name = "SliderValuePadding"
	SliderValuePadding.Parent = SliderValue
	SliderValuePadding.PaddingRight = UDim.new(0, 10)

	local ms = game.Players.LocalPlayer:GetMouse()
	local uis = game:GetService("UserInputService")
	local Value
	local mouse = game:GetService("Players").LocalPlayer:GetMouse();

	SliderButton.MouseButton1Down:Connect(function()
		game:GetService("TweenService"):Create(SliderValue, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
			TextTransparency = 0
		}):Play()
		Value = math.floor((((tonumber(Max) - tonumber(Min)) / 389) * SliderTrail.AbsoluteSize.X) + tonumber(Min)) or 0
		pcall(function()
			Callback(Value)
		end)
		SliderTrail:TweenSize(UDim2.new(0, math.clamp(mouse.X - SliderTrail.AbsolutePosition.X, 0, 389), 0, 10), "InOut", "Linear", 0.05, true)
		moveconnection = mouse.Move:Connect(function()
			SliderValue.Text = Value
			Value = math.floor((((tonumber(Max) - tonumber(Min)) / 389) * SliderTrail.AbsoluteSize.X) + tonumber(Min))
			pcall(function()
				Callback(Value)
			end)
			SliderTrail:TweenSize(UDim2.new(0, math.clamp(mouse.X - SliderTrail.AbsolutePosition.X, 0, 389), 0, 10), "InOut", "Linear", 0.05, true)
		end)
		releaseconnection = uis.InputEnded:Connect(function(Mouse)
			if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then
				Value = math.floor((((tonumber(Max) - tonumber(Min)) / 389) * SliderTrail.AbsoluteSize.X) + tonumber(Min))
				pcall(function()
					Callback(Value)
				end)
				SliderValue.Text = Value
				game:GetService("TweenService"):Create(SliderValue, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
					TextTransparency = 1
				}):Play()
				SliderTrail:TweenSize(UDim2.new(0, math.clamp(mouse.X - SliderTrail.AbsolutePosition.X, 0, 389), 0, 10), "InOut", "Linear", 0.05, true)
				moveconnection:Disconnect()
				releaseconnection:Disconnect()
			end
		end)
	end)
end

--slider example 

--Elements:Slider("ExampleSlider", 16, 500, function(value)
	--print("Slider value:", value)
	-- Add your logic here based on the slider value
--end)

function Elements:Keybind(Name, xKey, Callback)
	local Name = Name or "Keybind"
	local Callback = Callback or function() end
	local Keyx = xKey.Name

	local KeybindFrame = Instance.new("Frame")
	local KeybindFrameCorner = Instance.new("UICorner")
	local KeybindName = Instance.new("TextLabel")
	local KeybindNamePadding = Instance.new("UIPadding")
	local KeybindButton = Instance.new("TextButton")
	local KeybindButtonCorner = Instance.new("UICorner")

	KeybindFrame.Name = tostring(Name) .. "_Keybind"
	KeybindFrame.Parent = Tabs -- Change 'Tabs' to the parent frame you want to use
	KeybindFrame.BackgroundColor3 = Color3.fromRGB(40, 42, 60)
	KeybindFrame.BorderSizePixel = 0
	KeybindFrame.Size = UDim2.new(0, 408, 0, 35)

	KeybindFrameCorner.Name = "KeybindFrameCorner"
	KeybindFrameCorner.Parent = KeybindFrame

	KeybindName.Name = "KeybindName"
	KeybindName.Parent = KeybindFrame
	KeybindName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	KeybindName.BackgroundTransparency = 1.000
	KeybindName.BorderSizePixel = 0
	KeybindName.Size = UDim2.new(0, 235, 0, 35)
	KeybindName.Font = Enum.Font.Gotham
	KeybindName.Text = Name
	KeybindName.TextColor3 = Color3.fromRGB(255, 255, 255)
	KeybindName.TextSize = 16.000
	KeybindName.TextXAlignment = Enum.TextXAlignment.Left

	KeybindNamePadding.Name = "KeybindNamePadding"
	KeybindNamePadding.Parent = KeybindName
	KeybindNamePadding.PaddingLeft = UDim.new(0, 10)

	KeybindButton.Name = "KeybindButton"
	KeybindButton.Parent = KeybindFrame
	KeybindButton.BackgroundColor3 = Color3.fromRGB(55, 55, 75)
	KeybindButton.Position = UDim2.new(0.610294104, 0, 0.171428576, 0)
	KeybindButton.Size = UDim2.new(0, 150, 0, 23)
	KeybindButton.Font = Enum.Font.Gotham
	KeybindButton.Text = Keyx
	KeybindButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	KeybindButton.TextSize = 14.000
	KeybindButton.ZIndex = 2

	KeybindButtonCorner.Name = "KeybindButtonCorner"
	KeybindButtonCorner.Parent = KeybindButton

	local function updateKeyText(keyCode)
		KeybindButton.Text = keyCode
		Keyx = keyCode
	end

	local function resetButton()
		game.TweenService:Create(KeybindButton, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
			BackgroundColor3 = Color3.fromRGB(55, 55, 75)
		}):Play()
		KeybindButton.Text = Keyx
	end

	KeybindButton.MouseButton1Click:Connect(function()
		game.TweenService:Create(KeybindButton, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
			BackgroundColor3 = Color3.fromRGB(55, 74, 251)
		}):Play()
		KeybindButton.Text = ". . ."
		local input, isProcessed = game:GetService('UserInputService').InputBegan:wait()
		if not isProcessed then
			if input.KeyCode.Name ~= "Unknown" then
				updateKeyText(input.KeyCode.Name)
				resetButton()
			end
		end
	end)

	game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessedEvent)
		if not gameProcessedEvent then
			if input.KeyCode.Name == Keyx then
				Callback()
			end
		end
	end)
end


-- Example usage
--Elements:Keybind("ExampleKeybind", Enum.KeyCode.E, function()
	---print("Keybind activated!")
	-- Add your logic here for the keybind activation
--end)

-- Add the Elements:Textbox function definition here

function Elements:Textbox(Name, Default, Callback)
	local Name = Name or "Textbox"
	local Default = Default or ""
	local Callback = Callback or function() end
	local TextboxFrame = Instance.new("Frame")
	local TextboxFrameCorner = Instance.new("UICorner")
	local TextboxName = Instance.new("TextLabel")
	local TextboxNamePadding = Instance.new("UIPadding")
	local Textbox = Instance.new("TextBox")
	local TextboxCorner = Instance.new("UICorner")

	TextboxFrame.Name = tostring(Name).."_Textbox"
	TextboxFrame.Parent = Tabs -- Change 'Tabs' to the parent frame you want to use
	TextboxFrame.BackgroundColor3 = Color3.fromRGB(40, 42, 60)
	TextboxFrame.Size = UDim2.new(0, 408, 0, 35)

	TextboxFrameCorner.Name = "TextboxFrameCorner"
	TextboxFrameCorner.Parent = TextboxFrame

	TextboxName.Name = "TextboxName"
	TextboxName.Parent = TextboxFrame
	TextboxName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextboxName.BackgroundTransparency = 1.000
	TextboxName.BorderSizePixel = 0
	TextboxName.Size = UDim2.new(0, 235, 0, 35)
	TextboxName.Font = Enum.Font.Gotham
	TextboxName.Text = Name
	TextboxName.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextboxName.TextSize = 16.000
	TextboxName.TextXAlignment = Enum.TextXAlignment.Left

	TextboxNamePadding.Name = "TextboxNamePadding"
	TextboxNamePadding.Parent = TextboxName
	TextboxNamePadding.PaddingLeft = UDim.new(0, 10)

	Textbox.Name = "Textbox"
	Textbox.Parent = TextboxFrame
	Textbox.BackgroundColor3 = Color3.fromRGB(55, 55, 75)
	Textbox.BorderSizePixel = 0
	Textbox.Position = UDim2.new(0.610294104, 0, 0.171428576, 0)
	Textbox.Size = UDim2.new(0, 150, 0, 23)
	Textbox.Font = Enum.Font.Gotham
	Textbox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	Textbox.PlaceholderText = Default
	Textbox.Text = ""
	Textbox.TextColor3 = Color3.fromRGB(255, 255, 255)
	Textbox.TextSize = 14.000

	TextboxCorner.Name = "TextboxCorner"
	TextboxCorner.Parent = Textbox

	Textbox.Focused:Connect(function()
		game:GetService("TweenService"):Create(Textbox, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
			BackgroundColor3 = Color3.fromRGB(55, 74, 251)
		}):Play()
	end)

	Textbox.FocusLost:Connect(function()
		game:GetService("TweenService"):Create(Textbox, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
			BackgroundColor3 = Color3.fromRGB(55, 55, 75)
		}):Play()
		Callback(Textbox.Text)
	end)
end

-- Example usage
--Elements:Textbox("ExampleTextbox", "Default text", function(text)
--print("Textbox value:", text)
-- Add your logic here based on the textbox value
--end)

-- ... Button

function Elements:Button(Name, Callback)
	local Name = Name or "Button"
	local Callback = Callback or function () end

	local ButtonFunction = {}

	local ButtonFrame = Instance.new("Frame")
	local ButtonFrameCorner = Instance.new("UICorner")
	local Button = Instance.new("TextButton")
	local ButtonCorner = Instance.new("UICorner")
	local ButtonPadding = Instance.new("UIPadding")

	ButtonFrame.Name = tostring(Name).."_Button"
	ButtonFrame.Parent = Tabs -- Change 'Tabs' to the parent frame you want to use
	ButtonFrame.BackgroundColor3 = Color3.fromRGB(40, 42, 60)
	ButtonFrame.Size = UDim2.new(0, 408, 0, 35)

	ButtonFrameCorner.Name = "ButtonFrameCorner"
	ButtonFrameCorner.Parent = ButtonFrame

	Button.Name = "Button"
	Button.Parent = ButtonFrame
	Button.BackgroundColor3 = Color3.fromRGB(40, 42, 60)
	Button.Size = UDim2.new(0, 408, 0, 35)
	Button.Font = Enum.Font.Gotham
	Button.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button.TextSize = 16.000
	Button.Text = Name
	Button.TextXAlignment = Enum.TextXAlignment.Left
	Button.ZIndex = 2

	ButtonCorner.Name = "ButtonCorner"
	ButtonCorner.Parent = Button

	ButtonPadding.Name = "ButtonPadding"
	ButtonPadding.Parent = Button
	ButtonPadding.PaddingLeft = UDim.new(0, 10)

	Button.MouseButton1Down:Connect(function()
		game:GetService("TweenService"):Create(Button, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
			BackgroundColor3 = Color3.fromRGB(55, 74, 251)
		}):Play()
		wait(0.1)
		game:GetService("TweenService"):Create(Button, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
			BackgroundColor3 = Color3.fromRGB(40, 42, 60)
		}):Play()
		pcall(Callback)
	end)

	Button.MouseEnter:Connect(function()
		game:GetService("TweenService"):Create(Button, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
			BackgroundColor3 = Color3.fromRGB(48, 51, 70)
		}):Play()
	end)
	Button.MouseLeave:Connect(function()
		game:GetService("TweenService"):Create(Button, TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
			BackgroundColor3 = Color3.fromRGB(40, 42, 60)
		}):Play()
	end)

	function ButtonFunction:UpdateButton(NewName)
		Button.Text = NewName
		ButtonFrame.Name = tostring(NewName).."_Button"
	end

	return ButtonFunction
end

-- Example usage
-- local myButton = Elements:Button("MyButton", function()
--     print("Button clicked!")
-- end)

return Elements
end
return Tabs
end
return Library
